# App-Test
***************************************APP Setup***************************************4
Point you terminal at project location to these files and Run this command  using kubernaties

kubectl apply -f backend-deployment.yaml
kubectl apply -f frontend-deployment.yaml

Open browser and check-localhost:8080


Build Docker image using docker file for BackEnd run the image

docker build -t vengatesh27/backend:v1
docker run -d --name backend -p 3000:3000 vengatesh27/backend:v1

Build Docker image using docker file for Front End and run the image

docker build -t vengatesh27/frontend:v1
docker run -d --name frontend -p 8080:8080 vengatesh27/backend:v1






*******************************Autoamtion Setup****************************

**Selenium and BrowserMob Proxy Integration**
This project demonstrates how to use Selenium WebDriver in conjunction with BrowserMob Proxy to capture and analyze network traffic during browser automation. The provided example sets up a local server, configures BrowserMob Proxy, and performs network traffic analysis using Selenium.

**Prerequisites**

****Java Development Kit (JDK):** Ensure that Java is installed on your machine. You can download it from the Oracle JDK or OpenJDK.

**Maven**: This project uses Maven for dependency management. Install Maven from the Apache Maven website.

**ChromeDriver:** Download the appropriate version of ChromeDriver for your operating system from the ChromeDriver download page.

**BrowserMob Proxy:** This project uses BrowserMob Proxy for capturing network traffic. The dependency will be managed by Maven.

**Execution**

Compile and Run the Code

Compile and run the Java code using Maven or your IDE.

To compile and run using Maven:

**Verify Output**

The program will:

Start the BrowserMob Proxy server.
Configure Selenium to use BrowserMob Proxy.
Navigate to http://localhost:8080 (make sure your local server is running on this port).
Capture network traffic and analyze it.
Assert the response status and body of specific network requests.
